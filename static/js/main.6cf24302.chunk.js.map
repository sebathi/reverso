{"version":3,"sources":["services/useBoard.js","components/BoardCell.js","components/Board.js","components/MovesList.js","App.js","reportWebVitals.js","index.js"],"names":["authContext","createContext","ProvideBoard","children","auth","useProvideBoard","Provider","value","useBoard","useContext","blankBoard","useState","board","setBoard","turn","setTurn","moves","setMoves","toCoordinate","row","column","String","fromCharCode","inBoundaries","checkDirection","dr","dc","i","j","moveDirection","moveBoard","console","log","canMove","move","push","moveByCoordinate","coordinate","charAt","coordinateToRow","coordinateToColumn","BoardCell","className","onClick","e","Board","props","ret","retRow","id","drawBoard","MovesList","Array","isArray","join","Button","styled","a","App","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cf24302.chunk.js","sourcesContent":["import React, {createContext, useContext, useState} from \"react\";\n// import axios from 'axios';\n// import {AsyncStorage, Platform} from \"react-native\";\n\nconst authContext = createContext();\n\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideBoard({children}) {\n    const auth = useProvideBoard();\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useBoard = () => {\n    return useContext(authContext);\n};\n\nexport const black = 1;\nexport const white = 0;\n\nconst blankBoard = [ // 1 is black, 0 white and null is an empty cell\n    [null, null, null, null, null, null, null, null,],\n    [null, null, null, null, null, null, null, null,],\n    [null, null, null, null, null, null, null, null,],\n    [null, null, null, white, black, null, null, null,],\n    [null, null, null, black, white, null, null, null,],\n    [null, null, null, null, null, null, null, null,],\n    [null, null, null, null, null, null, null, null,],\n    [null, null, null, null, null, null, null, null,],\n]\n// Provider hook that creates auth object and handles state\nexport const useProvideBoard = () => {\n    const [board, setBoard] = useState(blankBoard);\n    const [turn, setTurn] = useState(black);\n    const [moves, setMoves] = useState([]);\n\n    const toCoordinate = (row, column) => {\n        if (row >= 0 && row < 8) {\n            if (column >= 0 && column < 8) {\n                let letter = String.fromCharCode(column + 97);\n                let rowNumber = row + 1;\n                return letter + rowNumber;\n            }\n        }\n        return\n    }\n    const coordinateToRow = (coordinate) => {\n        return coordinate.charAt(1) - 1\n    }\n    const coordinateToColumn = (coordinate) => {\n        return coordinate.charAt(0) - 97\n    }\n    const moveByCoordinate = (coordinate) => {\n        let row = coordinateToRow(coordinate);\n        let column = coordinateToColumn(coordinate);\n        return move(row, column);\n    }\n\n    const inBoundaries = (row, column) => {\n        return (row >= 0 && row < 8 && column >= 0 && column < 8);\n    }\n    const checkDirection = (row, column, dr, dc) => {\n        if (dr===0 && dc===0){\n            return false;\n        }\n        let i = row + dr;\n        let j = column + dc;\n        if (inBoundaries(i, j) && board[i][j] === (turn===black?white:black)) {\n            i += dr;\n            j += dc;\n            while (inBoundaries(i, j)) {\n                if (board[i][j] === turn) {\n                    return true;\n                }\n                i += dr;\n                j += dc;\n            }\n        }\n        return false;\n    }\n\n    const moveDirection = (row, column, dr, dc, moveBoard) => {\n        if (checkDirection(row, column, dr, dc)){\n            console.log(moveBoard);\n            let i = row + dr;\n            let j = column + dc;\n            if (inBoundaries(i, j) && board[i][j] === (turn===black?white:black)) {\n                moveBoard[i][j]=turn;\n                i += dr;\n                j += dc;\n                while (inBoundaries(i, j)) {\n                    if (board[i][j] === turn) {\n                        return moveBoard;\n                    }\n                    moveBoard[i][j]=turn;\n                    i += dr;\n                    j += dc;\n                }\n            }\n        }\n        return moveBoard;\n    }\n\n    const canMove = (row, column) => {\n        if (inBoundaries(row, column) && board[row][column] == null) {\n            if (checkDirection(row, column, 1, -1)\n                || checkDirection(row, column, 1, 0)\n                || checkDirection(row, column, 1, 1)\n                || checkDirection(row, column, 0, 1)\n                || checkDirection(row, column, 0, -1)\n                || checkDirection(row, column, -1, -1)\n                || checkDirection(row, column, -1, 0)\n                || checkDirection(row, column, -1, 1)\n            ) {\n                return true;\n            }\n\n\n        }\n        return false;\n    }\n    const move = (row, column) => {\n        if (canMove(row,column)){\n            let moveBoard = board;\n            moveBoard = moveDirection(row, column, -1, -1, moveBoard);\n            moveBoard = moveDirection(row, column, -1, 0, moveBoard);\n            moveBoard = moveDirection(row, column, -1, 1, moveBoard);\n            moveBoard = moveDirection(row, column, 0, -1, moveBoard);\n            moveBoard = moveDirection(row, column, 0, 1, moveBoard);\n            moveBoard = moveDirection(row, column, 1, -1, moveBoard);\n            moveBoard = moveDirection(row, column, 1, 0, moveBoard);\n            moveBoard = moveDirection(row, column, 1, 1, moveBoard);\n\n            moveBoard[row][column]=turn;\n            setBoard(moveBoard);\n            moves.push(toCoordinate(row, column));\n            setMoves(moves);\n            setTurn(turn===black?white:black);\n        }\n    }\n\n\n// Return the user object and auth methods\n    return {\n        board,\n        move,\n        moves,\n        moveByCoordinate,\n        canMove,\n        toCoordinate\n    };\n}\n","import {useBoard, black, white} from \"../services/useBoard\";\n\nconst BoardCell = ({row, column, ...props}) => {\n    const {board, move, canMove} = useBoard();\n    let className = \"cellStyle\";\n    if (board[row][column]===white) {\n        className = className + \" white\";\n    }else if(board[row][column]===black){\n        className = className + \" black\";\n    }else if (canMove(row, column)){\n        className = className + \" can-move\";\n    }\n    return (\n        <div className={className} onClick={(e)=>move(row, column)}>\n\n        </div>\n    )\n}\n\n\nexport default BoardCell;\n","import * as React from 'react';\nimport {useBoard} from \"../services/useBoard\";\nimport BoardCell from \"./BoardCell\";\n\n\nconst Board = (props) => {\n    const {board} = useBoard();\n    let drawBoard = () => {\n        let ret = [];\n        for (let i = 0; i < 8; i++) {\n            let retRow = [];\n            for (let j = 0; j < 8; j++) {\n                retRow.push(\n                    <td key={'td' + i + j}><BoardCell row={i} column={j} id={\"cell\" + i + j}/></td>\n                )\n            }\n            ret.push(\n                <tr key={'tr' + i}>{retRow}</tr>\n            );\n        }\n        return ret;\n    }\n    return (\n\n        <div>\n            <table>\n                <tbody>\n                    {drawBoard(board)}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\n\nexport default Board;\n","import {useBoard} from \"../services/useBoard\";\n\nconst MovesList = (props)=>{\n    const {moves} = useBoard();\n    const allMovesStr = ()=>{\n        if (Array.isArray(moves)){\n            return moves.join(', ');\n        }\n        console.log(moves);\n        return '';\n    }\n    return (\n        <div>\n            <h4>Moves</h4>\n            {allMovesStr()}\n        </div>\n    )\n}\nexport default MovesList;\n","import './App.css';\nimport styled from \"styled-components\";\n// import {useState} from \"react\";\nimport Board from \"./components/Board\";\nimport {ProvideBoard} from \"./services/useBoard\";\nimport MovesList from \"./components/MovesList\";\n\nconst Button = styled.a`\n`;\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ProvideBoard>\n                <header className=\"App-header\">\n\n                    <h1>Reverso</h1>\n                    <Board/>\n                    <Button\n                        className=\"App-link\"\n                        href=\"https://reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Learn Othello\n                    </Button>\n                    <MovesList/>\n                </header>\n            </ProvideBoard>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}